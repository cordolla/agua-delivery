services:
  postgres:
    image: postgres:15-alpine
    container_name: agua-delivery-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d products-service" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agua-delivery-net

  discovery-service:
    build:
      context: .
      dockerfile: discovery-service/Dockerfile
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - agua-delivery-net

  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    container_name: product-service
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/products-service
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://discovery-service:8761/eureka
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
    networks:
      - agua-delivery-net

  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    container_name: order-service
    ports:
      - "8082:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/orders-service
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://discovery-service:8761/eureka
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      product-service:
        condition: service_started
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
    networks:
      - agua-delivery-net

  gateway-service:
    build:
      context: .
      dockerfile: gateway-service/Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    environment:
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://discovery-service:8761/eureka
    depends_on:
      - discovery-service
    networks:
      - agua-delivery-net

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - agua-delivery-net

  payment-service:
    build:
      context: .
      dockerfile: payment-service/Dockerfile
    container_name: payment-service
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/payments-service
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
      EUREKA_CLIENT_SERVICE_URL_DEFAULT_ZONE: http://discovery-service:8761/eureka
      MERCADOPAGO_ACCESS_TOKEN: ${MERCADOPAGO_ACCESS_TOKEN}
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      postgres:
        condition: service_healthy
      discovery-service:
        condition: service_started
      rabbitmq:
        condition: service_started
    networks:
      - agua-delivery-net

volumes:
  postgres-data:

networks:
  agua-delivery-net:
    driver: bridge